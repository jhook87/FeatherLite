// src/lib/paths.ts
//
// Helpers to resolve image paths for products and variants based on the manifest
// generated by the asset organizer. These functions centralise the logic for
// mapping slugs and SKUs to relative image paths. They return sensible
// fallbacks if a product or variant does not have a dedicated image.

import manifest from '../../data/image-manifest.json';

/**
 * Return the relative image path for a given product slug. If the slug is
 * present in the manifest, return its associated path. Otherwise return a
 * generic placeholder. The returned paths are relative to the `public`
 * directory, so they can be passed directly to Next.js's Image component.
 */
export function imageForSlug(slug: string | undefined | null): string {
  if (!slug) {
    return '/images/placeholders/product-placeholder.svg';
  }
  const record = (manifest as Record<string, string>)[slug];
  return record || '/images/placeholders/product-placeholder.svg';
}

/**
 * Return the relative image path for a specific variant SKU. If the SKU
 * exists in the manifest, return its associated path. Otherwise attempt to
 * fall back to the product-level image by stripping the SKU prefix. If that
 * fails as well, return the generic variant placeholder.
 */
export function variantImageForSku(sku: string | undefined | null): string {
  if (!sku) {
    return '/images/placeholders/variant-placeholder.svg';
  }
  const record = (manifest as Record<string, string>)[sku];
  if (record) return record;
  // Try to fallback to product slug by splitting on hyphens and dropping the last part
  const parts = sku.split('-');
  parts.pop();
  const fallbackSlug = parts.join('-');
  if (fallbackSlug) {
    const fallbackRecord = (manifest as Record<string, string>)[fallbackSlug];
    if (fallbackRecord) return fallbackRecord;
  }
  return '/images/placeholders/variant-placeholder.svg';
}